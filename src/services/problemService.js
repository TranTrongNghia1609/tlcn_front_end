import axios from 'axios';
import API from '../utils/api';
import { PROBLEM_ENDPOINTS } from '../config/endpoints';
export const problemService = {
  getProblemById: async (id) =>{
    try{
        // console.log('Get problem by Id üÜî');
        // const data = await API.get(PROBLEM_ENDPOINTS.GET_PROLBEM_ID(id));
        // console.log('Problem data: ', data);
        const data = {
          _id: {
            "$oid": "68bf8d2b4759126242242442"
          },
          name: "Palindrome String",
          statement: "## Palindrome String\nCho m·ªôt x√¢u k√Ω t·ª± **s**, h√£y ki·ªÉm tra xem n√≥ c√≥ ph·∫£i l√† x√¢u ƒë·ªëi x·ª©ng (palindrome) hay kh√¥ng.\n\n### R√†ng bu·ªôc\n- $1 \\leq |s| \\leq 10^5$\n- X√¢u ch·ªâ g·ªìm c√°c k√Ω t·ª± ch·ªØ c√°i th∆∞·ªùng `a-z`.",
          input: "M·ªôt d√≤ng ch·ª©a x√¢u `s`.",
          output: "In `YES` n·∫øu `s` l√† palindrome, ng∆∞·ª£c l·∫°i in `NO`.",
          img: [],
          isPrivate: false,
          isPdf: false,
          time: 2,
          memory: 512,
          examples: [
            "**Input**\n```\nabba\n```\n\n**Output**\n```\nYES\n```",
            "**Input**\n```\nabc\n```\n\n**Output**\n```\nNO\n```"
          ],
          numberOfTestCases: 4,
          createdAt: {
            $date: "2025-09-09T02:12:59.774Z"
          },
          updatedAt: {
            $date: "2025-09-09T02:12:59.774Z"
          },
          tags: [
            "Tham lam",
            "S·ªë h·ªçc"
          ]
        }
        return {data: data};
    }
    catch(err){
        console.log('Get problem error: ', err);
        throw err;
    }
  }
}